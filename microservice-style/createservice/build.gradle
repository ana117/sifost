plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.sonarqube" version "3.3"
	id 'jacoco'
	id 'application'
}

group = 'id.ac.ui.cs.advancedprogramming'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
mainClassName = 'id.ac.ui.cs.advancedprogramming.sifost.SifostApplication'


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }

}

ext {
	set('springCloudVersion', "2021.0.0-M1")
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'org.webjars:jquery:3.6.0'
	implementation 'org.webjars:bootstrap:5.1.3'
	implementation 'org.webjars:webjars-locator-core'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'



	
	// Database Drivers
	implementation 'org.postgresql:postgresql:42.3.3'
	implementation 'com.h2database:h2:1.4.199' // This is for local use
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}



test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports{
        xml.enabled true
    }
	dependsOn test
}
tasks.named('sonarqube').configure {
    dependsOn test
}

bootJar {
    archiveClassifier.set('boot')
}

jar {
    archiveClassifier.set('')
}

tasks.named('test') {
	useJUnitPlatform()
}
